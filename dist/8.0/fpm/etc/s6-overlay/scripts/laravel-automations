#!/command/with-contenv bash

# Exit on error
set -e

# Check to see if an Artisan file exists and assume it means Laravel is configured.
if [ -f $WEBUSER_HOME/artisan ] && [ ${AUTORUN_ENABLED:="true"} == "true" ]; then
        echo "üèÉ‚Äç‚ôÇÔ∏è Checking for Laravel automations..."

        ############################################################################
        # Automated database migrations
        ############################################################################
        if [ ${AUTORUN_LARAVEL_MIGRATION:="false"} == "true" ]; then
            echo "üöÄ Running migrations..."
            su - webuser -c "php $WEBUSER_HOME/artisan migrate --force"
        fi

        ############################################################################
        # Automated storage linking
        ############################################################################
        if [ ${AUTORUN_LARAVEL_STORAGE_LINK:="true"} == "true" ]; then
            echo "üîê Linking the storage..."
            su - webuser -c "php $WEBUSER_HOME/artisan storage:link"
        fi

        ############################################################################
        # Cache management - commented out for now because of a bug with Laravel caching & API Rate limiting
        ############################################################################
        # if [ ${AUTORUN_LARAVEL_REFRESH_CACHE:="true"} == "true" ]; then
        #     echo "‚ôªÔ∏è Refreshing cache..."
        #     # Clear cache
        #     su - webuser -c "php $WEBUSER_HOME/artisan cache:clear"

        #     # Set cache
        #     su - webuser -c "php $WEBUSER_HOME/artisan route:cache"
        #     su - webuser -c "php $WEBUSER_HOME/artisan view:cache"
        # fi

else
    echo "üëâ Skipping Laravel automations because we could not detect a Laravel install or it was specifcally disabled..."
fi